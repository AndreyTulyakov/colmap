parameters:
  displayName: 'Ubuntu 18.04'
  ubuntuVersion: '18.04'
  cudaVersion: ''

jobs:
- job: ubuntu_build_${{ replace(parameters.ubuntuVersion, '.', '') }}_cuda_${{ replace(parameters.cudaVersion, '.', '') }}
  displayName: '${{ parameters.displayName }}'
  pool:
    vmImage: 'ubuntu-${{ parameters.ubuntuVersion }}'
  steps:
  - script: |
      sudo apt install -y \
        build-essential \
        ninja-build \
        libboost-program-options-dev \
        libboost-filesystem-dev \
        libboost-graph-dev \
        libboost-system-dev \
        libboost-test-dev \
        libeigen3-dev \
        libceres-dev \
        libfreeimage-dev \
        libgoogle-glog-dev \
        libgflags-dev \
        libglew-dev \
        qtbase5-dev \
        libqt5opengl5-dev \
        libcgal-dev \
        libcgal-qt5-dev \
        xvfb
    displayName: 'Install dependencies'
  
  - ${{ if not(eq(parameters.cudaVersion, '')) }}:
    - script: |
        ubuntu_version=${{ replace(parameters.ubuntuVersion, '.', '') }}
        sudo wget -O /etc/apt/preferences.d/cuda-repository-pin-600 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu${ubuntu_version}/x86_64/cuda-ubuntu${ubuntu_version}.pin
        sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu${ubuntu_version}/x86_64/7fa2af80.pub
        sudo add-apt-repository "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu${ubuntu_version}/x86_64/ /"
        sudo apt install cuda-${{ replace(parameters.cudaVersion, '.', '-') }}
      displayName: 'Install CUDA'

  - script: |
      cmake --version
      mkdir build
      cd build
      cmake .. \
        -GNinja \
        -DTESTS_ENABLED=ON
      ninja
    displayName: 'Configure and build'

  - script: |
      export DISPLAY=":99.0"
      export QT_QPA_PLATFORM="offscreen"
      Xvfb :99 &
      sleep 3
      cd build
      ctest
      tests_pass=$?
      if [ $tests_pass -ne 0 ]; then
          echo "Tests failed, rerunning with verbose output"
          ctest --rerun-failed --output-on-failure
      fi
      exit $tests_pass
    displayName: 'Run tests'
